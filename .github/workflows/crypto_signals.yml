name: Crypto Signals Processing

on:
  schedule:
    - cron: '*/3 * * * *'  # Run every 3 minutes
  workflow_dispatch:  # Allow manual triggering

env:
  DOCKER_IMAGE: crypto-signals
  CACHE_KEY: crypto-signals-cache-${{ github.sha }}

jobs:
  process-signals:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    # Add concurrency to prevent overlapping runs
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone for faster checkout

      # Setup Docker Buildx for better caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Cache pip dependencies
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Cache data directories
      - name: Cache data directories
        uses: actions/cache@v3
        with:
          path: |
            saved_data
            historical_data
            logs
          key: data-cache-${{ github.sha }}
          restore-keys: |
            data-cache-

      # Verify secrets
      - name: Check required secrets
        run: |
          if [ -z "${{ secrets.CG_API_KEY_1 }}" ]; then
            echo "Error: CG_API_KEY_1 is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CG_API_KEY_2 }}" ]; then
            echo "Error: CG_API_KEY_2 is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CG_API_KEY_3 }}" ]; then
            echo "Error: CG_API_KEY_3 is not set"
            exit 1
          fi
          if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
            echo "Error: TELEGRAM_BOT_TOKEN is not set"
            exit 1
          fi
          if [ -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            echo "Error: TELEGRAM_CHAT_ID is not set"
            exit 1
          fi

      # Create necessary directories
      - name: Create directories
        run: |
          mkdir -p saved_data historical_data logs
          chmod -R 777 saved_data historical_data logs

      # Create .env file from secrets
      - name: Create .env file
        run: |
          {
            echo "CG_API_KEY_1=${{ secrets.CG_API_KEY_1 }}"
            echo "CG_API_KEY_2=${{ secrets.CG_API_KEY_2 }}"
            echo "CG_API_KEY_3=${{ secrets.CG_API_KEY_3 }}"
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}"
            echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}"
          } > .env

      # Build and run Docker container
      - name: Build and run Docker container
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            .

          docker run --rm \
            -v ${{ github.workspace }}/saved_data:/app/saved_data \
            -v ${{ github.workspace }}/historical_data:/app/historical_data \
            -v ${{ github.workspace }}/logs:/app/logs \
            --env-file .env \
            ${{ env.DOCKER_IMAGE }}

      # Optimize cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Commit and push changes if any
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add saved_data historical_data logs
          git diff --quiet && git diff --staged --quiet || (git commit -m "Auto update data files" && git push)

      # Error notification
      - name: Notify on failure
        if: failure()
        run: |
          # Send to Telegram
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\":\"${{ secrets.TELEGRAM_CHAT_ID }}\",\"text\":\"‚ùå GitHub Actions workflow failed!\n\nRepository: ${{ github.repository }}\nWorkflow: ${{ github.workflow }}\nRun: ${{ github.run_id }}\n\nSee details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}"

          # Create GitHub issue
          gh issue create \
            --title "üö® Workflow Failed: ${{ github.workflow }}" \
            --body "Workflow run failed on $(date)\n\nRun ID: ${{ github.run_id }}\nSee details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --label "bug" --label "automation"